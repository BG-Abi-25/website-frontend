name: CI

on:
  push:
    branches:
    - main
    - dev

env:
  DOCKER_IMAGE_NAME: website-frontend
  DOCKER_CONTAINER_NAME: ${{ github.ref == 'refs/heads/dev' && 'info-website-frontend-dev' || 'info-website-frontend' }}

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version:
        - 22
    
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v4
      
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
      
    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build
      
    - name: Run tests
      run: npm run test:ci

  push:
    name: Push Image to Docker Registry
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout the source code
        uses: actions/checkout@v4
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.REGISTRY_URL }}/informatik-projekt/${{ env.DOCKER_IMAGE_NAME }}:${{ github.ref == 'refs/heads/main' && 'latest' || 'dev' }}

  deploy:
    name: Deploy to Docker Instance
    runs-on: ubuntu-latest
    needs: [test, push]

    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin
            cd ./informatik-projekt/website-frontend/
            docker compose down --rmi all
            docker compose stop
            docker compose rm -f
            docker compose pull
            docker compose up -d
